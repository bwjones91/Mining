using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DragonVulnerability : MonoBehaviour {

    public int dragonColor;
    public Material mithrilMaterial;
    public Material adamantiteMaterial;
    public Material goldMaterial;
    public Material pyroniumMaterial;
    public Material silverMaterial;
    public Material grapiteMaterial;
    public AmmoCounter ammoCounter;
    public int dragonHealth;

    private bool dragonVulnerable;
    private float dragonCoolDownTimer;
    private float vulnerableTimer;
    private Material material;
    private GameObject myDragon;

	void Start () {
        dragonCoolDownTimer = 10f;
        dragonVulnerable = false;
        myDragon = this.gameObject;
        material = GetComponent<Renderer>().material;
        dragonHealth = 10;
    }
	
	void Update () {
        if (dragonCoolDownTimer > 0)
        {
            dragonCoolDownTimer -= Time.deltaTime;
        }

        if(dragonCoolDownTimer < 0)
        {
            dragonVulnerable = true;
            dragonColor = Random.Range(1, 6);
            dragonCoolDownTimer = 15;
            vulnerableTimer = 5;
        }

        if(vulnerableTimer > 0)
        {
            vulnerableTimer -= Time.deltaTime;
        }
        if(vulnerableTimer < 0)
        {
            dragonColor = 0;

        }

        if (dragonVulnerable)
        {
            switch (dragonColor)
            {
                case 0:
                    material = Resources.Load("White Material") as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 1:
                    material = mithrilMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 2:
                    material = adamantiteMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 3:
                    material = goldMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 4:
                    material = pyroniumMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 5:
                    material = silverMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
                case 6:
                    material = grapiteMaterial as Material;
                    myDragon.GetComponent<MeshRenderer>().material = material;
                    break;
            }
        }

        if (Input.GetKeyDown(KeyCode.Space) && ammoCounter.currentAmmo == dragonColor)
        {
            dragonHealth--;
            print(dragonHealth);
        }

	}
}
